---
name: Publish Python 🐍 distribution 📦 to PyPI and TestPyPI

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  workflow_call:

concurrency:
  group: publish-${{github.ref}}-${{github.event.pull_request.number || github.run_number}}
  cancel-in-progress: true

env:
  # For now always take the "reduced" form of the version, even for those
  # actions runs that do not push to a package index.
  VERSIONINGIT_FOR_PACKAGE_INDEX: true
  # Which Python version generated the artifacts we're downloading.  It
  # doesn't matter as long as we're building platform- and version-independent
  # wheels.
  PYTHON_VERSION: '3.13'

permissions: {}

jobs:

  publish-to-testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI
    runs-on: ubuntu-latest

    # publish on merge to default branch or any tag
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')

    environment:
      name: testpypi
      url: https://test.pypi.org/p/pymolresponse

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: python-package-distributions-${{ env.PYTHON_VERSION }}
          path: dist/
      - name: Publish distribution 📦 to TestPyPI
        uses: pypa/gh-action-pypi-publish@67339c736fd9354cd4f8cb0b744f2b82a74b5c70 # v1.12.3
        with:
          repository-url: https://test.pypi.org/legacy/
          print-hash: true
          verbose: true
          # Temporary workaround for
          # https://github.com/pypa/gh-action-pypi-publish/issues/283
          attestations: false
  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    runs-on: ubuntu-latest

    # only publish on versioned tag pushes
    if: startsWith(github.ref, 'refs/tags/v')

    environment:
      name: pypi
      url: https://pypi.org/p/pymolresponse

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: python-package-distributions-${{ env.PYTHON_VERSION }}
          path: dist/
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@67339c736fd9354cd4f8cb0b744f2b82a74b5c70 # v1.12.3
        with:
          print-hash: true
          verbose: true
          # Temporary workaround for
          # https://github.com/pypa/gh-action-pypi-publish/issues/283
          attestations: false

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    runs-on: ubuntu-latest

    # make (draft) release on any tag
    if: startsWith(github.ref, 'refs/tags/')

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: python-package-distributions-${{ env.PYTHON_VERSION }}
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@f514d46b907ebcd5bedc05145c03b69c1edd8b46 # v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release (draft)
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create "${GITHUB_REF_NAME}"
          --repo '${{ github.repository }}'
          --draft
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload "${GITHUB_REF_NAME}"
          dist/**
          --repo '${{ github.repository }}'
