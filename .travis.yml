dist: bionic
sudo: false
language: python
python:
  - 3.6
  - 3.8

cache:
  timeout: 6000
  pip: true
  directories:
    - "${HOME}/miniconda"

before_install:
  - |
    if [[ ! -d "${HOME}/miniconda/bin" ]]; then
        rm -rf "${HOME}/miniconda"
        curl -s https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o miniconda.sh
        bash miniconda.sh -b -p $HOME/miniconda
    fi
  - export PATH="${HOME}/miniconda/bin:${PATH}"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - conda create -q -n p4env python=$TRAVIS_PYTHON_VERSION numpy scipy h5py psi4 psi4-rt -c psi4/label/dev -c psi4
  - source activate p4env
  - pip install -r requirements.txt -r requirements-dev.txt
  - conda install -q -c pyscf pyscf
  - conda install -q -c conda-forge graphviz python-graphviz # is this `graphviz`, `pygraphviz`, or `graphviz-python`?
  - conda list

install:
  - pip install .

before_script:
  - mkdir "${HOME}/tmp"
  - |
    export PSI_SCRATCH="${HOME}"/tmp
    export DOCS_BRANCH_NAME=gh-pages
    export DOCS_REPO_NAME=pyresponse_docs
    export DOCS_REPO_OWNER=berquist
    DOCS_ROOT_DIR="${TRAVIS_BUILD_DIR}"/doc
    export DOCS_BUILD_DIR="${DOCS_ROOT_DIR}"/build/html

script:
  - make test
  - make docs
  # this doesn't live in the `after_success` step in order to catch failure
  - |
    if [[ "${TRAVIS_BRANCH}" == master && "${TRAVIS_PULL_REQUEST}" == false ]]; then
        # Commits to master that are not pull requests, that is, only actual
        # addition (merges) of code to master, should deploy the docs.
        bash "${DOCS_ROOT_DIR}"/deploy_pyresponse_docs_repo_travis.bash
    fi

after_success:
  - codecov
